"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[484],{5256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(4848),i=n(8453);const r={title:"Using React",sidebar_position:2},s="Using React",l={id:"SDK/Using_React",title:"Using React",description:"The Cerebellum SDK provides ready-to-use React hooks to simplify the integration and usage of the SDK in your React applications. It was built from the ground up with React integration in mind and is the preferred way to integrate the Cerebellum SDK into your React applications.",source:"@site/docs/SDK/3. Using_React.md",sourceDirName:"SDK",slug:"/SDK/Using_React",permalink:"/docs/SDK/Using_React",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Using React",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuring Cerebellum",permalink:"/docs/SDK/Configuring_Cerebellum"},next:{title:"React Hooks",permalink:"/docs/SDK/React_Hooks"}},a={},c=[{value:"Step 1: Create a Configuration File",id:"step-1-create-a-configuration-file",level:2},{value:"Step 2. Setup the Cerebellum Provider",id:"step-2-setup-the-cerebellum-provider",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"using-react",children:"Using React"}),"\n",(0,o.jsx)(t.p,{children:"The Cerebellum SDK provides ready-to-use React hooks to simplify the integration and usage of the SDK in your React applications. It was built from the ground up with React integration in mind and is the preferred way to integrate the Cerebellum SDK into your React applications."}),"\n",(0,o.jsx)(t.h2,{id:"step-1-create-a-configuration-file",children:"Step 1: Create a Configuration File"}),"\n",(0,o.jsxs)(t.p,{children:["Create a ",(0,o.jsx)(t.code,{children:"CerebellumConfig.ts"})," file in your project's root directory. This file will contain the configuration settings for your Cerebellum instance. An example of the directory structure and configuration file for a react app can be found below:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Directory Structure"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-css",children:"your-project/\n\u251c\u2500\u2500 src/\n\u2502 \xa0 \u251c\u2500\u2500 CerebellumConfig.ts\n\u2502 \xa0 \u251c\u2500\u2500 Main.tsx\n\u2502 \xa0 \u2514\u2500\u2500 App.tsx\n| \xa0 \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,o.jsxs)(t.p,{children:["An example of the ",(0,o.jsx)(t.code,{children:"CerebellumConfig.ts"})," file:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'export const endpoint = "http://localhost:8001";\nexport const CerebellumOptions = {\n  autoConnect: true,\n  API_KEY: "SAMPLE_API_KEY",\n  reconnection: true,\n  reconnectionAttempts: 5,\n  reconnectionDelay: 5000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000,\n};\n'})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Explanation"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["In this example, the ",(0,o.jsx)(t.code,{children:"CerebellumConfig.ts"})," file is created in the ",(0,o.jsx)(t.code,{children:"src"})," directory of the project. It contains the configuration settings for the Cerebellum instance, including the endpoint URL, API key, and other options."]}),"\n",(0,o.jsx)(t.li,{children:"You can use the above Cerbellum configuration when using the cerebellum development server/image, as it is already preconfigured. If you would like to learn more about the options available, please refer to the cerebellum options section."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"step-2-setup-the-cerebellum-provider",children:"Step 2. Setup the Cerebellum Provider"}),"\n",(0,o.jsxs)(t.p,{children:["In your ",(0,o.jsx)(t.code,{children:"Main.tsx"})," file, import the CerebellumProvider and CerebellumConfig components. Then, wrap your application with the CerebellumProvider component and pass it in the configuration file as a prop. The CerebellumProvider component will provide the necessary context and state for your application."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'import ReactDOM from "react-dom/client";\nimport App from "./App";\nimport { CerebellumProvider } from "@cerebellum/sdk";\nimport { endpoint, CerebellumOptions } from "./CerebellumOptions";\n\nReactDOM.createRoot(document.getElementById("root")).render(\n  <CerebellumProvider endpoint={endpoint} options={CerebellumOptions}>\n    <App />\n  </CerebellumProvider>\n);\n'})}),"\n",(0,o.jsx)(t.p,{children:"In this step, you have successfully set up the CerebellumProvider component and passed in the configuration file as a prop. This will provide the necessary context and state to your application, to access the Cerebellum instance and its methods. Furthermore, it also provides access to the custom hooks that you can use to interact with the Cerebellum instance."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var o=n(6540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);