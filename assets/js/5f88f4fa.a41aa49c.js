"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[123],{3928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=t(4848),r=t(8453);const l={title:"Getting Started with the SDK",sidebar_position:0},i="Getting Started",s={id:"SDK/Getting_Started",title:"Getting Started with the SDK",description:"Installation",source:"@site/docs/SDK/1. Getting_Started.md",sourceDirName:"SDK",slug:"/SDK/Getting_Started",permalink:"/docs/SDK/Getting_Started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Getting Started with the SDK",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Cerebellum WebSocket Server",permalink:"/docs/server"},next:{title:"Configuring Cerebellum",permalink:"/docs/SDK/Configuring_Cerebellum"}},a={},c=[{value:"Installation",id:"installation",level:2},{value:"Local Development Setup",id:"local-development-setup",level:2},{value:"Getting Started",id:"getting-started-1",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"To install the Cerebellum SDK, use the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install @cerebellum/sdk\n"})}),"\n",(0,o.jsx)(n.h2,{id:"local-development-setup",children:"Local Development Setup"}),"\n",(0,o.jsx)(n.p,{children:"Cerebellum has a Docker image for local development, allowing you to test your application easily.\nIf you have Docker installed, you can start the local development environment by running the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx cerebellum-start\n"})}),"\n",(0,o.jsx)(n.p,{children:"This command will start the Cerebellum local development environment with the following components:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The main Cerebellum WebSocket server on port 8001 for real-time communication."}),"\n",(0,o.jsx)(n.li,{children:"Example authentication route on port 3000."}),"\n",(0,o.jsx)(n.li,{children:"Local DynamoDB server on port 8000."}),"\n",(0,o.jsx)(n.li,{children:"Redis server on port 6379."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The DynamoDB is used for message persistence, while Redis servers as a pub/sub system and a cache for presence information."}),"\n",(0,o.jsx)(n.p,{children:"To stop the local development server, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx cerebellum-stop\n"})}),"\n",(0,o.jsx)(n.h2,{id:"getting-started-1",children:"Getting Started"}),"\n",(0,o.jsx)(n.p,{children:"To use the Cerebellum SDK, create a new instance of Cerebellum by calling the Cerebellum function and passing in the endpoint of the Cerebellum server along with any desired options.\nHere's an example of how to create a new instance of Cerebellum:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'import Cerebellum from "@cerebellum/sdk";\n\nconst endpoint = "localhost:8001"; // Use appropriate URL for production\n\nconst CerebellumOptions = {\n  autoConnect: true, // Enable auto-connect. Requires API key or auth route.\n  API_KEY: "SAMPLE_API_KEY", // DO NOT USE IN PRODUCTION.\n  reconnection: true, // Enable reconnection attempts.\n  reconnectionAttempts: 5, // Number of attempts before giving up.\n  reconnectionDelay: 5000, // Delay between reconnection attempts (ms).\n  reconnectionDelayMax: 5000, // Maximum delay between reconnection attempts (ms).\n  timeout: 20000, // Timeout before a connection attempt is considered failed (ms).\n};\n\nconst cerebellum = await Cerebellum(endpoint, CerebellumOptions);\n'})}),"\n",(0,o.jsx)(n.p,{children:"For development, you can use the options above to connect to the local development server."}),"\n",(0,o.jsx)(n.p,{children:"In production, replace the URL with your Cerebellum server URL and use a secure API key or auth route."}),"\n",(0,o.jsx)(n.p,{children:"Once an instance of Cerebellum has been created, you can use the various hooks and components provided by the Cerebellum SDK to interact with the Cerebellum server."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const r={},l=o.createContext(r);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);